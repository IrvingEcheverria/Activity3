# Activity3
Activity 3 on Moodle

FORM ELEMENT
This is the first element that we will learn. This element wraps all the other elements that go inside of our form. This is the form element.
Our form won’t submit the data anywhere because it is not connected to a server. To connect our form to a server and process our data,
we can use any server-side language like Python, Ruby, or Javascript using Node. The part of processing the data involves two important attributes 
that are attached to the form element. Let’s take a look at those attributes.

1. action: The action attribute is the web address (URL) of a program that processes the information submitted by our form.
2. method: It is the HTTP method that the browser uses to submit the form, the possible values are POST and GET.

POST — Data from the body of the form is sent to the server.
GET — Data is sent inside of the URL and parameters are separated with a question mark


<form action="/singup" method="POST">
    <!-- This is a form element -->
</form>

_ _ _

INPUT ELEMENTS
The input element is the most commonly used form element. It is used to make a text field where the user can type some information for example email, password, etc.
The input element has a lot of options on what it can do, we can change an input behavior using attributes.


TYPE: Indicates what kind of input we want. If we give a value of text to the type attribute then what we mean here is that the value which we are entering into the input field is of type text.
There are many possible values for this particular attribute. Some possible values are email, tel for telephone and password, etc.

ID: This attribute is not mandatory, but it’s a good idea to add one. In some cases, this is helpful for targeting elements with CSS/JavaScript.
The ID attribute is added so that we can associate labels to specific form controls.

NAME: The name attribute is necessary. When a form is submitted to the server-side code, the server can understand the form data and process the values appropriately.

PLACEHOLDER: It is a short hint which is displayed in the input field before the user enters a value. As the user starts typing in the input field the placeholder disappears.


<input type="email" name="username" id="login_username">

_ _ _

TEXTAREA ELEMENT
Sometimes a single line of text is not enough and a simple input element won’t work. For example, some websites have a contact form for people to type their queries or messages.
In these cases, it’s best to use the textarea element.

This element is not a self-closing tag, so we need to type both the opening and the closing tag.

Attributes:
id: Same as mentioned above in <input/> element.
name: Same as mentioned above in <input/> element.
cols: Specifies the visible width of a text area.
rows: Specifies the visible number of lines in a text area.

<textarea name="feedback" id="contact_feedback" cols="30" rows="10"></textarea>

_ _ _

BUTTON ELEMENT
The button element is one of the most important form elements. Without a button, you cannot submit any form to the server for processing.
The button element accepts the attribute called type. This attribute accepts three values submit, reset, and button.

Attributes:

type=”reset”: It will clear all the form data when it’s clicked.
type=” button”: It does not have any default behavior and it’s mostly used with JavaScript to program it for custom behavior.
type=” submit”: The default behavior of the submit type is, as the name implies, to submit the form and send all the data over to the server.

<button type="reset">Reset form</button>
